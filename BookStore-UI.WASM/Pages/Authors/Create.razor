@page "/authors/create"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3 class="card-title">Create Author</h3>
<hr />
<br />
@if (!isSussess)
{
    <ErrorMessage Message="Something went wrong with the create operation" />
}
<EditForm Model="Model" OnValidSubmit="CreateAuthor">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="firstname">First name</label>
        <InputText @bind-Value="@Model.Firstname" class="form-control" id="firstname" />
    </div>
    <div class="form-group">
        <label for="lastname">Last name</label>
        <InputText @bind-Value="@Model.Lastname" class="form-control" id="lastname" />
    </div>
    <div class="form-group">
        <label for="bio">Biography</label>
        <InputTextArea @bind-Value="@Model.Bio" class="form-control" id="bio" />
    </div>
    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Craete Author
    </button>
    <button class="btn btn-outline-primary" @onclick="BackToList">
        <span class="oi oi-media-skip-backward"></span>
        Back to lists
    </button>
</EditForm>

@code {
    private Author Model = new Author();
    bool isSussess = true;

    private void BackToList()
    {
        _navManager.NavigateTo("authors/");
    }
    private async Task CreateAuthor()
    {
        isSussess = await _repo.Create(Endpoints.AuthorsEndpoint, Model);
        if (isSussess)
        {
            _toastService.ShowSuccess("Author created successfully");
            BackToList();
        }
    }
}
