@page "/books/delete/{Id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IBookRepository _repo
@inject NavigationManager _navManager

<h3 class="card-title">Are You Sure You Want To Delete This Book</h3>
<hr />
<br />
@if (!isSussess)
{
    <ErrorMessage Message="Something went wrong with the delete operation" />
}
@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again" />
}
else if (Model == null)
{
    <LoadingMessage Message="Loading Book Details" />
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Title</strong>
                    </td>
                    <td>@Model.Title</td>
                </tr>
                <tr>
                    <td>
                        <strong>Author</strong>
                    </td>
                    <td>
                        @if (Model.Author == null)
                        {
                            <span class="text-muted">No Author Recorded</span>
                        }
                        else
                        {
                            <a href="/authors/view/@Model.AuthorId">@Model.Author.Firstname @Model.Author.Lastname</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Summary</strong>
                    </td>
                    <td>@Model.Summary</td>
                </tr>
                <tr>
                    <td>
                        <strong>Published Year</strong>
                    </td>
                    <td>@Model.Year</td>
                </tr>
                <tr>
                    <td>
                        <strong>ISBN</strong>
                    </td>
                    <td>@Model.Isbn</td>
                </tr>

            </table>
        </div>
        <div class="col-4">
            <img src="uploads/@Model.Image" style="height:300px;width:300px" />
            <h3 class="text-center text-info">@string.Format("{0:C}", Model.Price)</h3>
        </div>
    </div>
}
<br />
<button class="btn btn-outline-danger" @onclick="DeleteBook">
    <span class="oi oi-delete"></span>
    DELETE Book
</button>
<button class="btn btn-outline-primary" @onclick="BackToList">
    <span class="oi oi-media-skip-backward"></span>
    Back to lists
</button>
@code {
    [Parameter]
    public string Id { get; set; }

    private Book Model = new Book();
    bool isSussess = true;

    protected async override Task OnInitializedAsync()
    {
        int id = int.Parse(Id);
        Model = await _repo.Get(Endpoints.BooksEndpoint, id);
    }
    private void BackToList()
    {
        _navManager.NavigateTo("books/");
    }
    private async Task DeleteBook()
    {
        bool isSuccess = await _repo.Delete(Endpoints.BooksEndpoint, Model.Id);
        if (isSuccess)
        {
            BackToList();
        }
    }
}
