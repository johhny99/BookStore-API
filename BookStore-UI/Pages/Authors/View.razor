@page "/authors/view/{Id}"

@inject IAuthorRepository _repo
@inject NavigationManager _navManager

<h3 class="card-title">View Author's Detail</h3>
<hr />
<br />
@if (Model == null)
{
    <LoadingMessage Message="Loading Author Details......" />
}
else
{
<div class="row">
    <div class="col-5">
        <h4>Author details</h4>
        <table class="table table-responsive">
            <tr>
                <td>First name:</td>
                <td>@Model.Firstname</td>
            </tr>
            <tr>
                <td>Last name:</td>
                <td>@Model.Lastname</td>
            </tr>
            <tr>
                <td>Biography:</td>
                <td>@Model.Bio</td>
            </tr>
        </table>
    </div>
    <div class="col-6">
        @if (Model.Books == null || Model.Books.Count < 1)
        {
            <div class="alert alert-dismissible alert-secondary">
                No book for this author
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header">
                    <h4>Author's Books</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var book in Model.Books)
                    {
                    <li class="list-group-item">
                        <a href="/books/view/@book.Id">@book.Title - @string.Format("{0:C}", book.Price)</a>
                    </li>
                    }
                </ul>
            </div>
        }

    </div>
</div>
}
<button class="btn btn-outline-warning" @onclick="GoToEdit">
    <span class="oi oi-pencil"></span>
    Edit Author
</button>
<button class="btn btn-outline-danger" @onclick="GoToDelete">
    <span class="oi oi-circle-x"></span>
    Delete Author
</button>
<button class="btn btn-outline-primary" @onclick="BackToList">
    <span class="oi oi-media-skip-backward"></span>
    Back to lists
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();

    protected async override Task OnInitializedAsync()
    {
        int id = int.Parse(Id);
        Model = await _repo.Get(Endpoints.AuthorsEndpoint, id);
    }
    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
    private void GoToDelete()
    {
        _navManager.NavigateTo($"/authors/delete/{Model.Id}");
    }
    private void GoToEdit()
    {
        _navManager.NavigateTo($"/authors/edit/{Model.Id}");
    }
}
